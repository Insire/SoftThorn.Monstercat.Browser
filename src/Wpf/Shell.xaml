<mah:MetroWindow x:Class="SoftThorn.Monstercat.Browser.Wpf.Shell"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:core="clr-namespace:SoftThorn.Monstercat.Browser.Core;assembly=SoftThorn.Monstercat.Browser.Core"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.FontAwesome"
                 xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:wpf="clr-namespace:SoftThorn.Monstercat.Browser.Wpf"
                 xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
                 xmlns:xfc="clr-namespace:XamlFlair.Controls;assembly=XamlFlair.WPF"
                 Title="{Binding Title}"
                 Width="800"
                 Height="820"
                 d:DataContext="{d:DesignInstance Type=core:ShellViewModel,
                                                  IsDesignTimeCreatable=False}"
                 Background="{DynamicResource MaterialDesignPaper}"
                 BorderBrush="#FF673AB7"
                 FontFamily="{DynamicResource MaterialDesignFont}"
                 GlowBrush="{DynamicResource PrimaryHueMidBrush}"
                 TextElement.FontSize="13"
                 TextElement.FontWeight="Regular"
                 TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                 TextOptions.TextFormattingMode="Ideal"
                 TextOptions.TextRenderingMode="Auto"
                 TitleCharacterCasing="Normal"
                 WindowTitleBrush="#FF673AB7"
                 mc:Ignorable="d">

    <mah:MetroWindow.Resources>
        <wpf:ShellViewModelProxy x:Key="ShellViewModelProxy" Data="{Binding}" />
        <wpf:PlaybackViewModelProxy x:Key="PlaybackViewModelProxy" Data="{Binding Playback}" />
    </mah:MetroWindow.Resources>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowLastSeparator="False">
            <Button Click="Playlist_Click" ToolTip="Playlist">
                <iconpacks:FontAwesome Kind="ListSolid" />
            </Button>

            <Button Click="Settings_Click" ToolTip="Settings">
                <iconpacks:FontAwesome Kind="WrenchSolid" />
            </Button>

            <Button Click="About_Click" ToolTip="About">
                <iconpacks:FontAwesome Kind="GlobeSolid" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:Flyout x:Name="Playlist"
                        Height="250"
                        Header="Playlist"
                        Position="Bottom">
                <DockPanel Margin="8">
                    <xfc:AnimatedListView xf:Animations.AnimateOnItemsSourceChange="True"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          ItemsSource="{Binding Playback.Items}">
                        <xfc:AnimatedListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </xfc:AnimatedListView.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type core:PlaybackItemViewModel}">
                                <DockPanel Margin="4">
                                    <Button Command="{Binding Data.RemoveCommand, Source={StaticResource PlaybackViewModelProxy}}"
                                            CommandParameter="{Binding}"
                                            DockPanel.Dock="Right">
                                        <iconpacks:FontAwesome Kind="TrashSolid" />
                                    </Button>

                                    <Grid DockPanel.Dock="Left">
                                        <Image Width="36"
                                               Height="36"
                                               wpf:ImageLoader.Source="{Binding Track.ImageUrl, Mode=OneTime}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                                               RenderOptions.EdgeMode="Aliased"
                                               SnapsToDevicePixels="True"
                                               ToolTip="{Binding Track.ImageUrl, Mode=OneTime}" />

                                        <Border Width="36"
                                                Height="36"
                                                Background="#CCCCCCCC">
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCurrentlyPlayed}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsCurrentlyPlayed}" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>

                                            <iconpacks:PackIconFontAwesome Width="32"
                                                                           Height="32"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           Foreground="#FF673AB7"
                                                                           Kind="PlayCircleRegular" />
                                        </Border>
                                    </Grid>

                                    <StackPanel Margin="8,0">
                                        <TextBlock VerticalAlignment="Center"
                                                   FontSize="16"
                                                   FontWeight="DemiBold"
                                                   Foreground="Black"
                                                   Text="{Binding Track.Title}" />
                                        <TextBlock VerticalAlignment="Center"
                                                   Foreground="Black"
                                                   Text="{Binding Track.ArtistsTitle}" />
                                        <TextBlock VerticalAlignment="Center"
                                                   Foreground="Black"
                                                   Text="{Binding Track.Release.Title}" />
                                    </StackPanel>
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </xfc:AnimatedListView>
                </DockPanel>
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>

    <materialDesign:TransitioningContent>
        <materialDesign:TransitioningContent.OpeningEffects>
            <materialDesign:TransitionEffect Kind="FadeIn" />
            <materialDesign:TransitionEffect Kind="SlideInFromBottom" />
        </materialDesign:TransitioningContent.OpeningEffects>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="8" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="8" />
            </Grid.ColumnDefinitions>

            <ScrollViewer Grid.Row="0"
                          Grid.Column="1"
                          materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--  Newest Releases  -->
                    <GroupBox Grid.Row="0"
                              Height="300"
                              Margin="16"
                              Padding="16"
                              materialDesign:ShadowAssist.ShadowDepth="Depth3"
                              BorderThickness="0"
                              DockPanel.Dock="Top"
                              Style="{DynamicResource MaterialDesignGroupBox}">
                        <GroupBox.Header>
                            <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}">
                                <Run Text="Top" />
                                <Run Text="{Binding Releases.Releases.Count, FallbackValue=0, Mode=OneWay}" />
                                <Run Text="Newest Releases" />
                            </TextBlock>
                        </GroupBox.Header>

                        <Grid>
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserSortColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding Releases.Releases}"
                                      ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                      SelectionMode="Single"
                                      SelectionUnit="FullRow">
                                <DataGrid.RowStyle>
                                    <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="{x:Type DataGridRow}">
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <TextBlock Text="{Binding ReleaseDate, StringFormat='{}Release date: {0:dd MMMM yyyy}'}" />
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.RowStyle>

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type core:ReleaseViewModel}">
                                                <Image Width="36"
                                                       Height="36"
                                                       wpf:ImageLoader.Source="{Binding ImageUrl, Mode=OneTime}"
                                                       xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                          Event=None}"
                                                       xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                       RenderOptions.EdgeMode="Aliased"
                                                       SnapsToDevicePixels="True"
                                                       ToolTip="{Binding ImageUrl, Mode=OneTime}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Binding="{Binding Title}" Header="Title" />
                                    <DataGridTextColumn Binding="{Binding Version}" />
                                    <DataGridTextColumn Width="*"
                                                        Binding="{Binding ArtistsTitle}"
                                                        Header="Artist" />

                                    <DataGridTextColumn Binding="{Binding Tracks.Count}" Header="Tracks" />
                                    <DataGridTemplateColumn Width="72"
                                                            CanUserResize="False"
                                                            CanUserSort="False">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type core:ReleaseViewModel}">
                                                <Button Width="36"
                                                        Height="36"
                                                        Command="{Binding Data.PlayCommand, Source={StaticResource ShellViewModelProxy}, IsAsync=True}"
                                                        CommandParameter="{Binding}"
                                                        Style="{StaticResource MaterialDesignIconForegroundButton}"
                                                        ToolTip="Play">

                                                    <iconpacks:PackIconFontAwesome Width="12"
                                                                                   Height="12"
                                                                                   Kind="PlaySolid" />
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <ProgressBar xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                            Event=Visibility}"
                                         IsIndeterminate="True"
                                         Value="0">
                                <ProgressBar.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                        </Grid>
                    </GroupBox>

                    <!--  Popular Tags  -->
                    <GroupBox Grid.Row="2"
                              Height="300"
                              Margin="16"
                              Padding="16"
                              materialDesign:ShadowAssist.ShadowDepth="Depth3"
                              BorderThickness="0"
                              DockPanel.Dock="Top"
                              Style="{DynamicResource MaterialDesignGroupBox}">
                        <GroupBox.Header>
                            <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}">
                                <Run Text="Top" />
                                <Run Text="{Binding Tags.SeriesCollection.Count, FallbackValue=0, Mode=OneWay}" />
                                <Run Text="Most Popular Tags" />
                            </TextBlock>
                        </GroupBox.Header>
                        <Grid>
                            <lvc:CartesianChart xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                   Event=Visibility}"
                                                Series="{Binding Tags.SeriesCollection}"
                                                TooltipPosition="Right"
                                                XAxes="{Binding Tags.XAxes}">
                                <lvc:CartesianChart.Style>
                                    <Style TargetType="{x:Type lvc:CartesianChart}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                                <Setter Property="Visibility" Value="Hidden" />
                                                <Setter Property="YAxes" Value="{Binding Tags.YAxes}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </lvc:CartesianChart.Style>
                            </lvc:CartesianChart>

                            <ProgressBar xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                            Event=Visibility}"
                                         IsIndeterminate="True"
                                         Value="0">
                                <ProgressBar.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                        </Grid>
                    </GroupBox>

                    <!--  Brands  -->
                    <ItemsControl Grid.Row="4" Margin="16">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="FrameworkElement.Margin" Value="8,16" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.Items>
                            <!--  UNCAGED  -->
                            <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth3" DataContext="{Binding Uncaged}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="140" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="16" />
                                    </Grid.RowDefinitions>

                                    <Border Grid.RowSpan="3"
                                            HorizontalAlignment="Stretch"
                                            Background="#FF673AB7">
                                        <Image wpf:ImageLoader.Source="{Binding LatestRelease.ImageUrl, Mode=OneWay}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                                               RenderOptions.EdgeMode="Aliased"
                                               SnapsToDevicePixels="True" />

                                        <Border.ToolTip>
                                            <TextBlock>
                                                <Run Text="{Binding LatestRelease.Title, Mode=OneWay}" />
                                                <Run Text="{Binding LatestRelease.Version, Mode=OneWay}" />
                                                <Run Text="by" />
                                                <Run Text="{Binding LatestRelease.ArtistsTitle, Mode=OneWay}" />
                                            </TextBlock>
                                        </Border.ToolTip>
                                    </Border>

                                    <Rectangle Grid.Row="1"
                                               Grid.RowSpan="2"
                                               Fill="{DynamicResource MaterialDesignLightBackground}" />

                                    <Button Grid.Row="0"
                                            Margin="0,0,16,-20"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                                        <materialDesign:PackIcon Kind="Star" />
                                    </Button>

                                    <TextBlock Grid.Row="1"
                                               Margin="8,24,0,0"
                                               FontWeight="Bold"
                                               Text="{Binding Releases.Count, StringFormat='{} UNCAGED ({0})'}" />
                                </Grid>
                            </materialDesign:Card>

                            <!--  INSTINCT  -->
                            <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth3" DataContext="{Binding Instinct}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="140" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="16" />
                                    </Grid.RowDefinitions>

                                    <Border Grid.RowSpan="3"
                                            HorizontalAlignment="Stretch"
                                            Background="#FF673AB7">
                                        <Image wpf:ImageLoader.Source="{Binding LatestRelease.ImageUrl, Mode=OneWay}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                                               RenderOptions.EdgeMode="Aliased"
                                               SnapsToDevicePixels="True" />

                                        <Border.ToolTip>
                                            <TextBlock>
                                                <Run Text="{Binding LatestRelease.Title, Mode=OneWay}" />
                                                <Run Text="{Binding LatestRelease.Version, Mode=OneWay}" />
                                                <Run Text="by" />
                                                <Run Text="{Binding LatestRelease.ArtistsTitle, Mode=OneWay}" />
                                            </TextBlock>
                                        </Border.ToolTip>
                                    </Border>

                                    <Rectangle Grid.Row="1"
                                               Grid.RowSpan="2"
                                               Fill="{DynamicResource MaterialDesignLightBackground}" />

                                    <Button Grid.Row="0"
                                            Margin="0,0,16,-20"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                                        <materialDesign:PackIcon Kind="Star" />
                                    </Button>

                                    <TextBlock Grid.Row="1"
                                               Margin="8,24,0,0"
                                               FontWeight="Bold"
                                               Text="{Binding Releases.Count, StringFormat='{} INSTINCT ({0})'}" />
                                </Grid>
                            </materialDesign:Card>

                            <!--  SILK  -->
                            <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth3" DataContext="{Binding Silk}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="140" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="16" />
                                    </Grid.RowDefinitions>

                                    <Border Grid.RowSpan="3"
                                            HorizontalAlignment="Stretch"
                                            Background="#FF673AB7">
                                        <Image wpf:ImageLoader.Source="{Binding LatestRelease.ImageUrl, Mode=OneWay}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                                               RenderOptions.EdgeMode="Aliased"
                                               SnapsToDevicePixels="True" />

                                        <Border.ToolTip>
                                            <TextBlock>
                                                <Run Text="{Binding LatestRelease.Title, Mode=OneWay}" />
                                                <Run Text="{Binding LatestRelease.Version, Mode=OneWay}" />
                                                <Run Text="by" />
                                                <Run Text="{Binding LatestRelease.ArtistsTitle, Mode=OneWay}" />
                                            </TextBlock>
                                        </Border.ToolTip>
                                    </Border>

                                    <Rectangle Grid.Row="1"
                                               Grid.RowSpan="2"
                                               Fill="{DynamicResource MaterialDesignLightBackground}" />

                                    <Button Grid.Row="0"
                                            Margin="0,0,16,-20"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                                        <materialDesign:PackIcon Kind="Star" />
                                    </Button>

                                    <TextBlock Grid.Row="1"
                                               Margin="8,24,0,0"
                                               FontWeight="Bold"
                                               Text="{Binding Releases.Count, StringFormat='{} SILK ({0})'}" />
                                </Grid>
                            </materialDesign:Card>
                        </ItemsControl.Items>
                    </ItemsControl>

                    <!--  Artists  -->
                    <GroupBox Grid.Row="6"
                              Height="300"
                              Margin="16"
                              Padding="16"
                              materialDesign:ShadowAssist.ShadowDepth="Depth3"
                              BorderThickness="0"
                              DockPanel.Dock="Top"
                              Style="{DynamicResource MaterialDesignGroupBox}">
                        <GroupBox.Header>
                            <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}">
                                <Run Text="Top" />
                                <Run Text="{Binding Artists.Artists.Count, FallbackValue=0, Mode=OneWay}" />
                                <Run Text="Latest Artists" />
                            </TextBlock>
                        </GroupBox.Header>

                        <Grid>
                            <DataGrid materialDesign:ScrollViewerAssist.IsAutoHideEnabled="true"
                                      AutoGenerateColumns="False"
                                      CanUserSortColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding Artists.Artists}"
                                      SelectionMode="Single"
                                      SelectionUnit="FullRow">
                                <DataGrid.Resources>
                                    <DataTemplate x:Key="ImageColumnTemplate" DataType="{x:Type core:ArtistViewModel}">
                                        <Image Width="30"
                                               Height="30"
                                               wpf:ImageLoader.Source="{Binding Uri, Mode=OneTime}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               ToolTip="{Binding Uri, Mode=OneTime}" />
                                    </DataTemplate>
                                </DataGrid.Resources>

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn CellTemplate="{StaticResource ImageColumnTemplate}" />
                                    <DataGridTextColumn Width="*"
                                                        Binding="{Binding Name}"
                                                        Header="Artist" />

                                    <DataGridTextColumn Binding="{Binding LatestReleaseDate, StringFormat='{}{0:dd MMMM yyyy}'}" Header="Latest Release Date" />
                                    <DataGridTextColumn Binding="{Binding LatestReleaseCount}" Header="Tracks" />
                                    <DataGridTextColumn Binding="{Binding Tracks.Count}" Header="Total Tracks" />

                                    <DataGridTemplateColumn Width="72"
                                                            CanUserResize="False"
                                                            CanUserSort="False">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type core:ArtistViewModel}">
                                                <Button Width="36"
                                                        Height="36"
                                                        Command="{Binding Data.PlayCommand, Source={StaticResource ShellViewModelProxy}, IsAsync=True}"
                                                        CommandParameter="{Binding}"
                                                        Style="{StaticResource MaterialDesignIconForegroundButton}"
                                                        ToolTip="Play">

                                                    <iconpacks:PackIconFontAwesome Width="12"
                                                                                   Height="12"
                                                                                   Kind="PlaySolid" />
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <ProgressBar xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                            Event=Visibility}"
                                         IsIndeterminate="True"
                                         Value="0">
                                <ProgressBar.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                        </Grid>
                    </GroupBox>

                    <!--  Genres  -->
                    <GroupBox Grid.Row="8"
                              Height="300"
                              Margin="16"
                              Padding="16"
                              materialDesign:ShadowAssist.ShadowDepth="Depth3"
                              BorderThickness="0"
                              DockPanel.Dock="Top"
                              Style="{DynamicResource MaterialDesignGroupBox}">
                        <GroupBox.Header>
                            <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}">
                                <Run Text="Top" />
                                <Run Text="{Binding Genres.SeriesCollection.Count, FallbackValue=0, Mode=OneWay}" />
                                <Run Text="Most Popular Genres" />
                            </TextBlock>
                        </GroupBox.Header>
                        <lvc:CartesianChart Grid.Row="6"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="5"
                                            xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                               Event=Visibility}"
                                            Series="{Binding Genres.SeriesCollection}"
                                            XAxes="{Binding Genres.XAxes}">
                            <lvc:CartesianChart.Style>
                                <Style TargetType="{x:Type lvc:CartesianChart}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </lvc:CartesianChart.Style>
                        </lvc:CartesianChart>
                    </GroupBox>
                </Grid>
            </ScrollViewer>

            <!--  Download  -->
            <Button Grid.Row="0"
                    Grid.RowSpan="3"
                    Grid.Column="1"
                    Margin="0,0,8,8"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Panel.ZIndex="1"
                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding Downloads.IsDownLoading}"
                    materialDesign:ButtonProgressAssist.Value="{Binding Downloads.Progress.Current.Value}"
                    xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                       Event=Visibility}"
                    Click="Download_Click"
                    ToolTip="Download all Tracks now">

                <iconpacks:PackIconFontAwesome Kind="DownloadSolid" />

                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFloatingActionAccentButton}" TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!--  Playback  -->
            <Grid Grid.Row="2"
                  Grid.Column="1"
                  Margin="0,0,0,8"
                  Panel.ZIndex="0">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Playback.IsPlaybackAvailable}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Playback.IsPlaybackAvailable}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Grid.Resources>
                    <Style x:Key="SecondaryPlaybackButton"
                           BasedOn="{StaticResource MaterialDesignFloatingActionSecondaryLightButton}"
                           TargetType="{x:Type Button}">
                        <Setter Property="Height" Value="48" />
                        <Setter Property="Width" Value="48" />
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="2"
                        Command="{Binding Playback.PreviousCommand}"
                        Style="{StaticResource SecondaryPlaybackButton}">
                    <iconpacks:PackIconFontAwesome Kind="BackwardSolid" />
                </Button>

                <Button Grid.Column="4" Command="{Binding Playback.ResumePlayCommand}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingActionSecondaryButton}" TargetType="{x:Type Button}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Playback.PlaybackState}" Value="{x:Static core:StreamingPlaybackState.Playing}">
                                    <Setter Property="Command" Value="{Binding Playback.PauseCommand}" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <iconpacks:PackIconFontAwesome Kind="PauseSolid" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Playback.PlaybackState}" Value="{x:Static core:StreamingPlaybackState.Paused}">
                                    <Setter Property="Command" Value="{Binding Playback.PlayCommand}" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Grid.Column="6"
                        Command="{Binding Playback.NextCommand}"
                        Style="{StaticResource SecondaryPlaybackButton}">
                    <iconpacks:PackIconFontAwesome Kind="ForwardSolid" />
                </Button>

                <materialDesign:PopupBox Width="48"
                                         Height="48"
                                         Background="{DynamicResource SecondaryHueLightBrush}"
                                         PlacementMode="TopAndAlignCentres"
                                         PopupMode="MouseOver"
                                         Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                         ToolTip="Volume"
                                         ToolTipService.Placement="Right">

                    <materialDesign:PopupBox.ToggleContent>
                        <iconpacks:PackIconFontAwesome Kind="VolumeUpSolid" />
                    </materialDesign:PopupBox.ToggleContent>

                    <materialDesign:PopupBox.ToggleCheckedContent>
                        <iconpacks:PackIconFontAwesome Kind="VolumeOffSolid" />
                    </materialDesign:PopupBox.ToggleCheckedContent>

                    <Slider Height="125"
                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                            Maximum="100"
                            Minimum="0"
                            Orientation="Vertical"
                            TickFrequency="0.1"
                            TickPlacement="None"
                            Value="{Binding Playback.Volume, Mode=TwoWay}" />
                </materialDesign:PopupBox>
            </Grid>

            <!--  Progress  -->
            <ContentControl Grid.Row="3" Grid.ColumnSpan="3">
                <ProgressBar Maximum="100">
                    <i:Interaction.Behaviors>
                        <wpf:SmoothProgressBehavior Percentage="{Binding Progress.Current.Value, Mode=OneWay}" />
                    </i:Interaction.Behaviors>
                </ProgressBar>

                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>
    </materialDesign:TransitioningContent>
</mah:MetroWindow>
