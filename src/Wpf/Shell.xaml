<mah:MetroWindow x:Class="SoftThorn.Monstercat.Browser.Wpf.Shell"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:core="clr-namespace:SoftThorn.Monstercat.Browser.Core;assembly=SoftThorn.Monstercat.Browser.Core"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.FontAwesome"
                 xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:wpf="clr-namespace:SoftThorn.Monstercat.Browser.Wpf"
                 xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
                 xmlns:xfc="clr-namespace:XamlFlair.Controls;assembly=XamlFlair.WPF"
                 x:Name="rootWindow"
                 Title="{Binding Title}"
                 Width="800"
                 Height="820"
                 MinWidth="800"
                 MinHeight="820"
                 d:DataContext="{d:DesignInstance Type=core:ShellViewModel,
                                                  IsDesignTimeCreatable=False}"
                 Background="{DynamicResource MaterialDesignPaper}"
                 BorderBrush="#FF673AB7"
                 FontFamily="{DynamicResource MaterialDesignFont}"
                 GlowBrush="{DynamicResource PrimaryHueMidBrush}"
                 TextElement.FontSize="13"
                 TextElement.FontWeight="Regular"
                 TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                 TextOptions.TextFormattingMode="Ideal"
                 TextOptions.TextRenderingMode="Auto"
                 TitleCharacterCasing="Normal"
                 WindowTitleBrush="#FF673AB7"
                 mc:Ignorable="d">

    <mah:MetroWindow.Resources>
        <wpf:ShellViewModelProxy x:Key="ShellViewModelProxy" Data="{Binding}" />
        <wpf:PlaybackViewModelProxy x:Key="PlaybackViewModelProxy" Data="{Binding Playback}" />
        <Style x:Key="DataGridPopupBox"
               BasedOn="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
               TargetType="{x:Type materialDesign:PopupBox}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="PlacementMode" Value="RightAndAlignMiddles" />
            <Setter Property="PopupMode" Value="MouseOver" />
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
            <Setter Property="ToggleContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <materialDesign:PackIcon Width="24"
                                                 Height="24"
                                                 Margin="4,0,4,0"
                                                 Foreground="Black"
                                                 Kind="DotsVertical" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </mah:MetroWindow.Resources>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowLastSeparator="False">

            <!--  Playlist  -->
            <materialDesign:PopupBox x:Name="PlaylistPopup"
                                     IsEnabled="{Binding Playback.Items.Count, Converter={wpf:GreaterThan Value=0}}"
                                     PlacementMode="BottomAndAlignLeftEdges"
                                     StaysOpen="True"
                                     ToolTip="Playlist"
                                     ToolTipService.Placement="Right">
                <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:Badged Badge="{Binding Playback.Items.Count}">
                        <iconpacks:PackIconFontAwesome Foreground="{DynamicResource MaterialDesignPaper}" Kind="ListSolid" />
                    </materialDesign:Badged>
                </materialDesign:PopupBox.ToggleContent>

                <DockPanel MaxHeight="820"
                           Margin="8"
                           Background="{DynamicResource MaterialDesignPaper}">
                    <xfc:AnimatedListView xf:Animations.AnimateOnItemsSourceChange="True"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          ItemsSource="{Binding Playback.Items}"
                                          ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                        <xfc:AnimatedListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="{x:Type ListViewItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </xfc:AnimatedListView.ItemContainerStyle>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type core:PlaybackItemViewModel}">
                                <Grid Width="300" Margin="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0">
                                        <Image Width="48"
                                               Height="48"
                                               wpf:ImageLoader.Source="{Binding Track.ImageUrl, Mode=OneTime}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                                               RenderOptions.EdgeMode="Aliased"
                                               SnapsToDevicePixels="True"
                                               ToolTip="{Binding Track.ImageUrl, Mode=OneTime}" />

                                        <Border Width="36" Height="36">
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCurrentlyPlayed}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsCurrentlyPlayed}" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>

                                            <iconpacks:PackIconFontAwesome Width="32"
                                                                           Height="32"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           Foreground="#FF673AB7"
                                                                           Kind="PlayCircleRegular" />
                                        </Border>
                                    </Grid>

                                    <DockPanel Grid.Column="1"
                                               Margin="8,0"
                                               LastChildFill="False">
                                        <TextBlock VerticalAlignment="Center"
                                                   DockPanel.Dock="Top"
                                                   FontSize="16"
                                                   FontWeight="DemiBold"
                                                   Foreground="Black"
                                                   Text="{Binding Track.Title}"
                                                   TextTrimming="CharacterEllipsis" />
                                        <TextBlock VerticalAlignment="Center"
                                                   DockPanel.Dock="Top"
                                                   Foreground="Black"
                                                   Text="{Binding Track.ArtistsTitle}"
                                                   TextTrimming="CharacterEllipsis" />
                                        <TextBlock VerticalAlignment="Center"
                                                   DockPanel.Dock="Top"
                                                   Foreground="Black"
                                                   Text="{Binding Track.Release.Title}"
                                                   TextTrimming="CharacterEllipsis" />
                                    </DockPanel>

                                    <Button Grid.Column="2"
                                            Command="{Binding Data.RemoveCommand, Source={StaticResource PlaybackViewModelProxy}}"
                                            CommandParameter="{Binding}"
                                            DockPanel.Dock="Right"
                                            Style="{StaticResource MaterialDesignIconButton}">
                                        <iconpacks:FontAwesome Kind="TrashSolid" />
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </xfc:AnimatedListView>
                </DockPanel>
            </materialDesign:PopupBox>

            <Button Command="{Binding SettingsCommand, ElementName=rootWindow}" ToolTip="Settings">
                <iconpacks:FontAwesome Kind="WrenchSolid" />
            </Button>

            <Button Command="{Binding AboutCommand, ElementName=rootWindow}" ToolTip="About">
                <iconpacks:FontAwesome Kind="GlobeSolid" />
            </Button>

            <Button x:Name="DiagnosticsButton"
                    Command="{Binding DataCommand, ElementName=rootWindow}"
                    ToolTip="Debug">
                <iconpacks:FontAwesome Kind="BugSolid" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <materialDesign:TransitioningContent>
        <materialDesign:TransitioningContent.OpeningEffects>
            <materialDesign:TransitionEffect Kind="FadeIn" />
            <materialDesign:TransitionEffect Kind="SlideInFromBottom" />
        </materialDesign:TransitioningContent.OpeningEffects>

        <Grid Grid.IsSharedSizeScope="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="8" />
                <RowDefinition Height="Auto" SharedSizeGroup="ButtonOverlay" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="8" />
            </Grid.ColumnDefinitions>

            <ScrollViewer Grid.Row="0"
                          Grid.Column="1"
                          materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--  Newest Tracks  -->
                    <GroupBox Grid.Row="0"
                              Height="300"
                              Margin="16"
                              Padding="16"
                              materialDesign:ElevationAssist.Elevation="Dp3"
                              BorderThickness="0"
                              DockPanel.Dock="Top"
                              Style="{DynamicResource MaterialDesignGroupBox}">
                        <GroupBox.Header>
                            <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}">
                                <Run Text="Top" />
                                <Run Text="{Binding Tracks.Tracks.Count, FallbackValue=0, Mode=OneWay}" />
                                <Run Text="Newest Tracks" />
                            </TextBlock>
                        </GroupBox.Header>

                        <Grid>
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserSortColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding Tracks.Tracks}"
                                      ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                      SelectionMode="Single"
                                      SelectionUnit="FullRow">
                                <DataGrid.RowStyle>
                                    <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="{x:Type DataGridRow}">
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <TextBlock Text="{Binding ReleaseDate, StringFormat='{}Release date: {0:dd MMMM yyyy}'}" />
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.RowStyle>

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type core:TrackViewModel}">
                                                <Image Width="48"
                                                       Height="48"
                                                       wpf:ImageLoader.Source="{Binding ImageUrl, Mode=OneTime}"
                                                       xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                          Event=None}"
                                                       xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                       RenderOptions.EdgeMode="Aliased"
                                                       SnapsToDevicePixels="True"
                                                       ToolTip="{Binding ImageUrl, Mode=OneTime}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Width="Auto"
                                                        Binding="{Binding Title}"
                                                        Header="Title" />
                                    <DataGridTextColumn Width="Auto" Binding="{Binding Version}" />
                                    <DataGridTextColumn Width="*"
                                                        Binding="{Binding ArtistsTitle}"
                                                        Header="Artist" />

                                    <DataGridTemplateColumn Width="96"
                                                            CanUserResize="False"
                                                            CanUserSort="False">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type core:TrackViewModel}">
                                                <materialDesign:PopupBox Style="{StaticResource DataGridPopupBox}">

                                                    <StackPanel>
                                                        <Button Margin="4"
                                                                Command="{Binding DownloadTrackCommand, ElementName=rootWindow}"
                                                                CommandParameter="{Binding}"
                                                                Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                                ToolTip="Download track">
                                                            <iconpacks:PackIconFontAwesome Kind="DownloadSolid" />
                                                        </Button>

                                                        <Button Margin="4"
                                                                Command="{Binding Data.PlayCommand, Source={StaticResource ShellViewModelProxy}}"
                                                                CommandParameter="{Binding}"
                                                                Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                                ToolTip="Play track">
                                                            <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                                        </Button>
                                                    </StackPanel>
                                                </materialDesign:PopupBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <ProgressBar xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                            Event=Visibility}"
                                         IsIndeterminate="True"
                                         Value="0">
                                <ProgressBar.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                        </Grid>
                    </GroupBox>

                    <!--  Newest Releases  -->
                    <GroupBox Grid.Row="2"
                              Height="300"
                              Margin="16"
                              Padding="16"
                              materialDesign:ElevationAssist.Elevation="Dp3"
                              BorderThickness="0"
                              DockPanel.Dock="Top"
                              Style="{DynamicResource MaterialDesignGroupBox}">
                        <GroupBox.Header>
                            <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}">
                                <Run Text="Top" />
                                <Run Text="{Binding Releases.Releases.Count, FallbackValue=0, Mode=OneWay}" />
                                <Run Text="Newest Releases" />
                            </TextBlock>
                        </GroupBox.Header>

                        <Grid>
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserSortColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding Releases.Releases}"
                                      ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                      SelectionMode="Single"
                                      SelectionUnit="FullRow">
                                <DataGrid.RowStyle>
                                    <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="{x:Type DataGridRow}">
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <TextBlock Text="{Binding ReleaseDate, StringFormat='{}Release date: {0:dd MMMM yyyy}'}" />
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.RowStyle>

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type core:ReleaseViewModel}">
                                                <Image Width="48"
                                                       Height="48"
                                                       wpf:ImageLoader.Source="{Binding ImageUrl, Mode=OneTime}"
                                                       xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                          Event=None}"
                                                       xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                       RenderOptions.EdgeMode="Aliased"
                                                       SnapsToDevicePixels="True"
                                                       ToolTip="{Binding ImageUrl, Mode=OneTime}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Width="Auto"
                                                        Binding="{Binding Title}"
                                                        Header="Title" />
                                    <DataGridTextColumn Width="Auto" Binding="{Binding Version}" />
                                    <DataGridTextColumn Width="*"
                                                        Binding="{Binding ArtistsTitle}"
                                                        Header="Artist" />

                                    <DataGridTextColumn Binding="{Binding Tracks.Count}" Header="Tracks" />
                                    <DataGridTemplateColumn Width="96"
                                                            CanUserResize="False"
                                                            CanUserSort="False">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type core:ReleaseViewModel}">
                                                <materialDesign:PopupBox Style="{StaticResource DataGridPopupBox}">

                                                    <StackPanel>
                                                        <Button Margin="4"
                                                                Command="{Binding DownloadReleaseCommand, ElementName=rootWindow}"
                                                                CommandParameter="{Binding}"
                                                                Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                                ToolTip="Download all tracks">
                                                            <iconpacks:PackIconFontAwesome Kind="DownloadSolid" />
                                                        </Button>

                                                        <Button Margin="4"
                                                                Command="{Binding Data.PlayCommand, Source={StaticResource ShellViewModelProxy}}"
                                                                CommandParameter="{Binding}"
                                                                Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                                ToolTip="Play all tracks">
                                                            <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                                        </Button>
                                                    </StackPanel>
                                                </materialDesign:PopupBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <ProgressBar xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                            Event=Visibility}"
                                         IsIndeterminate="True"
                                         Value="0">
                                <ProgressBar.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                        </Grid>
                    </GroupBox>

                    <!--  Popular Tags  -->
                    <GroupBox Grid.Row="4"
                              Height="300"
                              Margin="16"
                              Padding="16"
                              materialDesign:ElevationAssist.Elevation="Dp3"
                              BorderThickness="0"
                              DockPanel.Dock="Top"
                              Style="{DynamicResource MaterialDesignGroupBox}">
                        <GroupBox.Header>
                            <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}">
                                <Run Text="Top" />
                                <Run Text="{Binding Tags.SeriesCollection.Count, FallbackValue=0, Mode=OneWay}" />
                                <Run Text="Most Popular Tags" />
                            </TextBlock>
                        </GroupBox.Header>
                        <Grid>
                            <lvc:CartesianChart xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                   Event=Visibility}"
                                                Series="{Binding Tags.SeriesCollection}"
                                                TooltipPosition="Right"
                                                XAxes="{Binding Tags.XAxes}">
                                <lvc:CartesianChart.Style>
                                    <Style TargetType="{x:Type lvc:CartesianChart}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                                <Setter Property="Visibility" Value="Hidden" />
                                                <Setter Property="YAxes" Value="{Binding Tags.YAxes}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </lvc:CartesianChart.Style>
                            </lvc:CartesianChart>

                            <ProgressBar xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                            Event=Visibility}"
                                         IsIndeterminate="True"
                                         Value="0">
                                <ProgressBar.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                        </Grid>
                    </GroupBox>

                    <!--  Brands  -->
                    <ItemsControl Grid.Row="6" Margin="16">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="FrameworkElement.Margin" Value="8,16" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.Items>
                            <!--  UNCAGED  -->
                            <materialDesign:Card materialDesign:ElevationAssist.Elevation="Dp3" DataContext="{Binding Uncaged}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="140" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="16" />
                                    </Grid.RowDefinitions>

                                    <Border Grid.RowSpan="3"
                                            HorizontalAlignment="Stretch"
                                            Background="#FF673AB7">
                                        <Image wpf:ImageLoader.Source="{Binding LatestRelease.ImageUrl, Mode=OneWay}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                                               RenderOptions.EdgeMode="Aliased"
                                               SnapsToDevicePixels="True" />

                                        <Border.ToolTip>
                                            <TextBlock>
                                                <Run Text="{Binding LatestRelease.Title, Mode=OneWay}" />
                                                <Run Text="{Binding LatestRelease.Version, Mode=OneWay}" />
                                                <Run Text="by" />
                                                <Run Text="{Binding LatestRelease.ArtistsTitle, Mode=OneWay}" />
                                            </TextBlock>
                                        </Border.ToolTip>
                                    </Border>

                                    <Rectangle Grid.Row="1"
                                               Grid.RowSpan="2"
                                               Fill="{DynamicResource MaterialDesignLightBackground}" />

                                    <materialDesign:PopupBox Grid.Row="0"
                                                             Margin="0,0,16,-20"
                                                             HorizontalAlignment="Right"
                                                             VerticalAlignment="Bottom"
                                                             PlacementMode="TopAndAlignCentres"
                                                             PopupMode="MouseOver"
                                                             Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                                             ToolTipService.Placement="Right">
                                        <StackPanel>
                                            <Button Margin="4"
                                                    Command="{Binding DownloadUncagedCommand, ElementName=rootWindow}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                    ToolTip="Download all UNCAGED tracks">
                                                <iconpacks:PackIconFontAwesome Kind="DownloadSolid" />
                                            </Button>

                                            <Button Margin="4"
                                                    Command="{Binding Data.PlayCommand, Source={StaticResource ShellViewModelProxy}}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                    ToolTip="Play all UNCAGED tracks">
                                                <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                            </Button>
                                        </StackPanel>
                                    </materialDesign:PopupBox>

                                    <TextBlock Grid.Row="1"
                                               Margin="8,24,0,0"
                                               FontWeight="Bold"
                                               Text="{Binding Releases.Count, StringFormat='{} UNCAGED ({0})'}" />
                                </Grid>
                            </materialDesign:Card>

                            <!--  INSTINCT  -->
                            <materialDesign:Card materialDesign:ElevationAssist.Elevation="Dp3" DataContext="{Binding Instinct}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="140" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="16" />
                                    </Grid.RowDefinitions>

                                    <Border Grid.RowSpan="3"
                                            HorizontalAlignment="Stretch"
                                            Background="#FF673AB7">
                                        <Image wpf:ImageLoader.Source="{Binding LatestRelease.ImageUrl, Mode=OneWay}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                                               RenderOptions.EdgeMode="Aliased"
                                               SnapsToDevicePixels="True" />

                                        <Border.ToolTip>
                                            <TextBlock>
                                                <Run Text="{Binding LatestRelease.Title, Mode=OneWay}" />
                                                <Run Text="{Binding LatestRelease.Version, Mode=OneWay}" />
                                                <Run Text="by" />
                                                <Run Text="{Binding LatestRelease.ArtistsTitle, Mode=OneWay}" />
                                            </TextBlock>
                                        </Border.ToolTip>
                                    </Border>

                                    <Rectangle Grid.Row="1"
                                               Grid.RowSpan="2"
                                               Fill="{DynamicResource MaterialDesignLightBackground}" />

                                    <materialDesign:PopupBox Grid.Row="0"
                                                             Margin="0,0,16,-20"
                                                             HorizontalAlignment="Right"
                                                             VerticalAlignment="Bottom"
                                                             PlacementMode="TopAndAlignCentres"
                                                             PopupMode="MouseOver"
                                                             Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                                             ToolTipService.Placement="Right">
                                        <StackPanel>
                                            <Button Margin="4"
                                                    Command="{Binding DownloadInstinctCommand, ElementName=rootWindow}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                    ToolTip="Download all INSTINCT tracks">
                                                <iconpacks:PackIconFontAwesome Kind="DownloadSolid" />
                                            </Button>

                                            <Button Margin="4"
                                                    Command="{Binding Data.PlayCommand, Source={StaticResource ShellViewModelProxy}}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                    ToolTip="Play all INSTINCT tracks">
                                                <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                            </Button>
                                        </StackPanel>
                                    </materialDesign:PopupBox>

                                    <TextBlock Grid.Row="1"
                                               Margin="8,24,0,0"
                                               FontWeight="Bold"
                                               Text="{Binding Releases.Count, StringFormat='{} INSTINCT ({0})'}" />
                                </Grid>
                            </materialDesign:Card>

                            <!--  SILK  -->
                            <materialDesign:Card materialDesign:ElevationAssist.Elevation="Dp3" DataContext="{Binding Silk}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="140" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="16" />
                                    </Grid.RowDefinitions>

                                    <Border Grid.RowSpan="3"
                                            HorizontalAlignment="Stretch"
                                            Background="#FF673AB7">
                                        <Image wpf:ImageLoader.Source="{Binding LatestRelease.ImageUrl, Mode=OneWay}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                                               RenderOptions.EdgeMode="Aliased"
                                               SnapsToDevicePixels="True" />

                                        <Border.ToolTip>
                                            <TextBlock>
                                                <Run Text="{Binding LatestRelease.Title, Mode=OneWay}" />
                                                <Run Text="{Binding LatestRelease.Version, Mode=OneWay}" />
                                                <Run Text="by" />
                                                <Run Text="{Binding LatestRelease.ArtistsTitle, Mode=OneWay}" />
                                            </TextBlock>
                                        </Border.ToolTip>
                                    </Border>

                                    <Rectangle Grid.Row="1"
                                               Grid.RowSpan="2"
                                               Fill="{DynamicResource MaterialDesignLightBackground}" />

                                    <materialDesign:PopupBox Grid.Row="0"
                                                             Margin="0,0,16,-20"
                                                             HorizontalAlignment="Right"
                                                             VerticalAlignment="Bottom"
                                                             PlacementMode="TopAndAlignCentres"
                                                             PopupMode="MouseOver"
                                                             Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                                             ToolTipService.Placement="Right">
                                        <StackPanel>
                                            <Button Margin="4"
                                                    Command="{Binding DownloadSilkCommand, ElementName=rootWindow}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                    ToolTip="Download all SILK tracks">
                                                <iconpacks:PackIconFontAwesome Kind="DownloadSolid" />
                                            </Button>

                                            <Button Margin="4"
                                                    Command="{Binding Data.PlayCommand, Source={StaticResource ShellViewModelProxy}}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                    ToolTip="Play all SILK tracks">
                                                <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                            </Button>
                                        </StackPanel>
                                    </materialDesign:PopupBox>

                                    <TextBlock Grid.Row="1"
                                               Margin="8,24,0,0"
                                               FontWeight="Bold"
                                               Text="{Binding Releases.Count, StringFormat='{} SILK ({0})'}" />
                                </Grid>
                            </materialDesign:Card>
                        </ItemsControl.Items>
                    </ItemsControl>

                    <!--  Artists  -->
                    <GroupBox Grid.Row="8"
                              Height="300"
                              Margin="16"
                              Padding="16"
                              materialDesign:ElevationAssist.Elevation="Dp3"
                              BorderThickness="0"
                              DockPanel.Dock="Top"
                              Style="{DynamicResource MaterialDesignGroupBox}">
                        <GroupBox.Header>
                            <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}">
                                <Run Text="Top" />
                                <Run Text="{Binding Artists.Artists.Count, FallbackValue=0, Mode=OneWay}" />
                                <Run Text="Latest Artists" />
                            </TextBlock>
                        </GroupBox.Header>

                        <Grid>
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserSortColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding Artists.Artists}"
                                      ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                      SelectionMode="Single"
                                      SelectionUnit="FullRow">
                                <DataGrid.Resources>
                                    <DataTemplate x:Key="ImageColumnTemplate" DataType="{x:Type core:ArtistViewModel}">
                                        <Image Width="48"
                                               Height="48"
                                               wpf:ImageLoader.Source="{Binding Uri, Mode=OneTime}"
                                               xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                                  Event=None}"
                                               xf:Animations.PrimaryBinding="{Binding Path=(wpf:ImageLoader.IsLoading), RelativeSource={RelativeSource Self}, Converter={wpf:IsNot}}"
                                               ToolTip="{Binding Uri, Mode=OneTime}" />
                                    </DataTemplate>
                                </DataGrid.Resources>

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn CellTemplate="{StaticResource ImageColumnTemplate}" />
                                    <DataGridTextColumn Width="*"
                                                        Binding="{Binding Name}"
                                                        Header="Artist" />

                                    <DataGridTextColumn Binding="{Binding LatestReleaseDate, StringFormat='{}{0:dd MMMM yyyy}'}" Header="Latest Release Date" />
                                    <DataGridTextColumn Binding="{Binding LatestReleaseCount}" Header="Tracks" />
                                    <DataGridTextColumn Binding="{Binding Tracks.Count}" Header="Total Tracks" />

                                    <DataGridTemplateColumn Width="96"
                                                            CanUserResize="False"
                                                            CanUserSort="False">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type core:ArtistViewModel}">
                                                <materialDesign:PopupBox Style="{StaticResource DataGridPopupBox}">

                                                    <StackPanel>
                                                        <Button Margin="4"
                                                                Command="{Binding DownloadArtistCommand, ElementName=rootWindow}"
                                                                CommandParameter="{Binding}"
                                                                Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                                ToolTip="Download all Artist tracks">
                                                            <iconpacks:PackIconFontAwesome Kind="DownloadSolid" />
                                                        </Button>

                                                        <Button Margin="4"
                                                                Command="{Binding Data.PlayCommand, Source={StaticResource ShellViewModelProxy}}"
                                                                CommandParameter="{Binding}"
                                                                Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}"
                                                                ToolTip="Play all SILK tracks">
                                                            <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                                        </Button>
                                                    </StackPanel>
                                                </materialDesign:PopupBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <ProgressBar xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                            Event=Visibility}"
                                         IsIndeterminate="True"
                                         Value="0">
                                <ProgressBar.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                        </Grid>
                    </GroupBox>

                    <!--  Genres  -->
                    <GroupBox Grid.Row="10"
                              Height="300"
                              Margin="16"
                              Padding="16"
                              materialDesign:ElevationAssist.Elevation="Dp3"
                              BorderThickness="0"
                              DockPanel.Dock="Top"
                              Style="{DynamicResource MaterialDesignGroupBox}">
                        <GroupBox.Header>
                            <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}">
                                <Run Text="Top" />
                                <Run Text="{Binding Genres.SeriesCollection.Count, FallbackValue=0, Mode=OneWay}" />
                                <Run Text="Most Popular Genres" />
                            </TextBlock>
                        </GroupBox.Header>

                        <lvc:CartesianChart Grid.Row="6"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="5"
                                            xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                                               Event=Visibility}"
                                            Series="{Binding Genres.SeriesCollection}"
                                            XAxes="{Binding Genres.XAxes}">
                            <lvc:CartesianChart.Style>
                                <Style TargetType="{x:Type lvc:CartesianChart}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </lvc:CartesianChart.Style>
                        </lvc:CartesianChart>
                    </GroupBox>
                </Grid>
            </ScrollViewer>

            <!--  Button Overlay  -->
            <Grid Grid.Row="0"
                  Grid.RowSpan="3"
                  Grid.Column="1"
                  VerticalAlignment="Bottom">

                <!--  Playback  -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" SharedSizeGroup="ButtonOverlay" />
                    </Grid.RowDefinitions>

                    <materialDesign:ColorZone Padding="8"
                                              materialDesign:ElevationAssist.Elevation="Dp3"
                                              materialDesign:ShadowAssist.ShadowEdges="Top"
                                              Mode="Light">
                        <materialDesign:ColorZone.Style>
                            <Style TargetType="{x:Type materialDesign:ColorZone}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Playback.IsPlaybackAvailable}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Playback.IsPlaybackAvailable}" Value="false">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:ColorZone.Style>

                        <Grid>
                            <Grid.Resources>
                                <Style x:Key="SecondaryPlaybackButton"
                                       BasedOn="{StaticResource MaterialDesignFloatingActionSecondaryLightButton}"
                                       TargetType="{x:Type Button}">
                                    <Setter Property="Height" Value="48" />
                                    <Setter Property="Width" Value="48" />
                                </Style>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--<Button Grid.Column="2"
                                    Command="{Binding Playback.PreviousCommand}"
                                    Style="{StaticResource SecondaryPlaybackButton}"
                                    ToolTip="Previous">
                                <iconpacks:PackIconFontAwesome Kind="BackwardSolid" />
                            </Button>-->

                            <Button Grid.Column="4">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignFloatingActionSecondaryButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Playback.PlaybackState}" Value="{x:Static core:StreamingPlaybackState.Playing}">
                                                <Setter Property="Command" Value="{Binding Playback.PauseCommand}" />
                                                <Setter Property="ToolTip" Value="Pause" />
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <iconpacks:PackIconFontAwesome Kind="PauseSolid" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Playback.PlaybackState}" Value="{x:Static core:StreamingPlaybackState.Paused}">
                                                <Setter Property="Command" Value="{Binding Playback.ResumePlayCommand}" />
                                                <Setter Property="ToolTip" Value="Resume" />
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <iconpacks:PackIconFontAwesome Kind="PlaySolid" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Button Grid.Column="6"
                                    Command="{Binding Playback.NextCommand}"
                                    Style="{StaticResource SecondaryPlaybackButton}"
                                    ToolTip="Next">
                                <iconpacks:PackIconFontAwesome Kind="ForwardSolid" />
                            </Button>

                            <materialDesign:PopupBox Width="48"
                                                     Height="48"
                                                     Background="{DynamicResource SecondaryHueLightBrush}"
                                                     PlacementMode="TopAndAlignCentres"
                                                     PopupMode="MouseOver"
                                                     Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                                     ToolTip="Volume"
                                                     ToolTipService.Placement="Right">

                                <materialDesign:PopupBox.ToggleContent>
                                    <iconpacks:PackIconFontAwesome Kind="VolumeUpSolid" />
                                </materialDesign:PopupBox.ToggleContent>

                                <materialDesign:PopupBox.ToggleCheckedContent>
                                    <iconpacks:PackIconFontAwesome Kind="VolumeOffSolid" />
                                </materialDesign:PopupBox.ToggleCheckedContent>

                                <Slider Height="125"
                                        Foreground="{DynamicResource SecondaryHueMidBrush}"
                                        Maximum="100"
                                        Minimum="0"
                                        Orientation="Vertical"
                                        TickFrequency="0.1"
                                        TickPlacement="None"
                                        Value="{Binding Playback.Volume, Mode=TwoWay}" />
                            </materialDesign:PopupBox>
                        </Grid>
                    </materialDesign:ColorZone>
                </Grid>

                <!--  Download  -->
                <Button Margin="0,0,8,4"
                        HorizontalAlignment="Right"
                        materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding Downloads.IsDownLoading}"
                        materialDesign:ButtonProgressAssist.Value="{Binding Downloads.Progress.Current.Value}"
                        xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn},
                                                           Event=Visibility}"
                        Command="{Binding DownloadAllCommand, ElementName=rootWindow}">

                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingActionAccentButton}" TargetType="{x:Type Button}">
                            <Setter Property="ToolTip" Value="Download all Tracks now" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoading}" Value="true">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLoading}" Value="false">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Downloads.IsDownLoading}" Value="True">
                                    <Setter Property="ToolTip" Value="{Binding Downloads.Progress.Current}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>

                    <iconpacks:PackIconFontAwesome Kind="DownloadSolid" />
                </Button>
            </Grid>

            <!--  Progress  -->
            <ContentControl Grid.Row="2"
                            Grid.ColumnSpan="3"
                            VerticalAlignment="Bottom">
                <ProgressBar Maximum="100">
                    <i:Interaction.Behaviors>
                        <wpf:SmoothProgressBehavior Percentage="{Binding Progress.Current.Value, Mode=OneWay}" />
                    </i:Interaction.Behaviors>
                </ProgressBar>

                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>
    </materialDesign:TransitioningContent>
</mah:MetroWindow>
